{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirak\\\\loopbreakr-site\\\\client\\\\src\\\\components\\\\ContactSection\\\\ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"../Common/CommonElements.js\";\nimport { Container, ContactLabel, ContactTextArea, ContactInput, ContactItem, ContactFormWrap } from './ContactElements.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const [status, setStatus] = useState(\"Submit\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const {\n      name,\n      email,\n      message\n    } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value\n    };\n    let response = await fetch(process.env.PUBLIC_URL || \"http://localhost:3000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(details)\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ContactFormWrap, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(ContactItem, {\n        children: [/*#__PURE__*/_jsxDEV(ContactLabel, {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ContactInput, {\n          type: \"text\",\n          id: \"name\",\n          label: true,\n          for: \"Name here...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactItem, {\n        children: [/*#__PURE__*/_jsxDEV(ContactLabel, {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ContactInput, {\n          type: \"email\",\n          id: \"email\",\n          label: true,\n          for: \"Email here...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactItem, {\n        children: [/*#__PURE__*/_jsxDEV(ContactLabel, {\n          htmlFor: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ContactTextArea, {\n          id: \"message\",\n          label: true,\n          for: \"Message here...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"qESKK7LDpFTuMSR0UrKu+hcLdmU=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/mirak/loopbreakr-site/client/src/components/ContactSection/ContactForm.js"],"names":["React","useState","Button","Container","ContactLabel","ContactTextArea","ContactInput","ContactItem","ContactFormWrap","ContactForm","status","setStatus","handleSubmit","e","preventDefault","name","email","message","target","elements","details","value","response","fetch","process","env","PUBLIC_URL","method","headers","body","JSON","stringify","result","json","alert"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"../Common/CommonElements.js\";\r\nimport {Container, ContactLabel, ContactTextArea, ContactInput, ContactItem, ContactFormWrap} from './ContactElements.js'\r\n\r\nconst ContactForm = () => {\r\n  const [status, setStatus] = useState(\"Submit\");\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setStatus(\"Sending...\");\r\n    const { name, email, message } = e.target.elements;\r\n    let details = {\r\n      name: name.value,\r\n      email: email.value,\r\n      message: message.value,\r\n    };\r\n    let response = await fetch( process.env.PUBLIC_URL || \"http://localhost:3000\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(details),\r\n    });\r\n    setStatus(\"Submit\");\r\n    let result = await response.json();\r\n    alert(result.status);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n    <ContactFormWrap onSubmit={handleSubmit}>\r\n\r\n\r\n      <ContactItem>\r\n        <ContactLabel htmlFor=\"name\">Name:</ContactLabel>\r\n        <ContactInput type=\"text\" id=\"name\" label for=\"Name here...\" required />\r\n      </ContactItem>\r\n\r\n      <ContactItem>\r\n        <ContactLabel htmlFor=\"email\">Email:</ContactLabel>\r\n        <ContactInput type=\"email\" id=\"email\" label for=\"Email here...\" required /> \r\n      </ContactItem>\r\n\r\n      <ContactItem>\r\n        <ContactLabel htmlFor=\"message\">Message:</ContactLabel>\r\n        <ContactTextArea id=\"message\" label for=\"Message here...\" required />\r\n      </ContactItem>\r\n \r\n      <Button type=\"submit\">{status}</Button>\r\n \r\n    </ContactFormWrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}