{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirak\\\\loopbreakr-site\\\\client\\\\src\\\\components\\\\DonateForm\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { AmountButton, FormText } from './PaymentFormElements';\nimport { Button } from '../Common/CommonElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#fff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fff\"\n      },\n      \"::placeholder\": {\n        color: \"#fff\"\n      }\n    },\n    invalid: {\n      iconColor: \"#fff\",\n      color: \"red\"\n    }\n  }\n};\nexport default function PaymentForm() {\n  _s();\n\n  const [amountVal, setAmountVal] = useState(0);\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:3000/donationform\", {\n          amount: {\n            amountVal\n          },\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(AmountButton, {\n          onClick: () => setAmountVal(100),\n          children: \"$1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AmountButton, {\n          onClick: () => setAmountVal(500),\n          children: \"$5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AmountButton, {\n          onClick: () => setAmountVal(1000),\n          children: \"$10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AmountButton, {\n          onClick: () => setAmountVal(2000),\n          children: \"$20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AmountButton, {\n          onClick: () => setAmountVal(5000),\n          children: \"$50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormText, {\n          style: {\n            color: '#fff'\n          },\n          children: [\"$\", amountVal / 100, \".00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"FormGroup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FormRow\",\n            children: /*#__PURE__*/_jsxDEV(CardElement, {\n              options: CARD_OPTIONS\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormText, {\n        style: {\n          color: '#fff'\n        },\n        children: \"You're the best! If you have any questions about your donation, you can reach out to us at loopbreak@loopbreakr.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaymentForm, \"QiE6QOgNRBTaoAY73zGMqhNOGU4=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/mirak/loopbreakr-site/client/src/components/DonateForm/PaymentForm.js"],"names":["React","useState","CardElement","useElements","useStripe","axios","AmountButton","FormText","Button","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontSize","fontSmoothing","invalid","PaymentForm","amountVal","setAmountVal","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js'\r\nimport axios from 'axios'\r\nimport { AmountButton, FormText} from './PaymentFormElements';\r\nimport { Button } from '../Common/CommonElements';\r\n\r\nconst CARD_OPTIONS = {\r\n\ticonStyle: \"solid\",\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\ticonColor: \"#fff\",\r\n\t\t\tcolor: \"#fff\",\r\n\t\t\tfontWeight: 500,\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fff\" },\r\n\t\t\t\"::placeholder\": { color: \"#fff\" }\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\ticonColor: \"#fff\",\r\n\t\t\tcolor: \"red\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default function PaymentForm() {\r\n    const [amountVal, setAmountVal] = useState(0);\r\n    const [success, setSuccess ] = useState(false)\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n    \r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type: \"card\",\r\n            card: elements.getElement(CardElement)\r\n        })\r\n\r\n\r\n    if(!error) {\r\n        try {\r\n            const {id} = paymentMethod\r\n            const response = await axios.post(\"http://localhost:3000/donationform\", {\r\n                amount: {amountVal},\r\n                id\r\n            })\r\n\r\n            if(response.data.success) {\r\n                console.log(\"Successful payment\")\r\n                setSuccess(true)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(\"Error\", error)\r\n        }\r\n    } else {\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\n    return (\r\n        <>\r\n        {!success ? \r\n        <div>\r\n            \r\n            <div>\r\n            <AmountButton onClick={() => setAmountVal(100)}>$1</AmountButton>\r\n            <AmountButton onClick={() => setAmountVal(500)}>$5</AmountButton>\r\n            <AmountButton onClick={() => setAmountVal(1000)}>$10</AmountButton>\r\n            <AmountButton onClick={() => setAmountVal(2000)}>$20</AmountButton>\r\n            <AmountButton onClick={() => setAmountVal(5000)}>$50</AmountButton>\r\n            </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <FormText style={{ color: '#fff' }}>${amountVal/100}.00</FormText>\r\n            <fieldset className=\"FormGroup\">\r\n                <div className=\"FormRow\">\r\n                    <CardElement options={CARD_OPTIONS}/>\r\n                </div>\r\n            </fieldset>\r\n            <Button >Pay</Button>\r\n        </form>\r\n        </div>\r\n        :\r\n       <div>\r\n           <FormText style={{ color: '#fff' }}>You're the best! If you have any questions about your donation, you can reach out to us at loopbreak@loopbreakr.com</FormText>\r\n       </div> \r\n        }\r\n            \r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}